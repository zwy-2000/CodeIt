{"program": "def solve_bd4472b8(I):\n    x1 = width(I)\n    x2 = astuple(TWO, x1)\n    x3 = crop(I, ORIGIN, x2)\n    x4 = tophalf(x3)\n    x5 = dmirror(x4)\n    x6 = hupscale(x5, x1)\n    x7 = repeat(x6, TWO)\n    x8 = merge(x7)\n    O = vconcat(x3, x8)\n    return O\n", "training_examples": [{"input": [[8, 3], [5, 5], [0, 0], [0, 0], [0, 0], [0, 0]], "output": [[8, 3], [5, 5], [8, 8], [3, 3], [8, 8], [3, 3]]}, {"input": [[2, 1, 4], [5, 5, 5], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], "output": [[2, 1, 4], [5, 5, 5], [2, 2, 2], [1, 1, 1], [4, 4, 4], [2, 2, 2], [1, 1, 1], [4, 4, 4]]}, {"input": [[3, 2, 1, 4], [5, 5, 5, 5], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], "output": [[3, 2, 1, 4], [5, 5, 5, 5], [3, 3, 3, 3], [2, 2, 2, 2], [1, 1, 1, 1], [4, 4, 4, 4], [3, 3, 3, 3], [2, 2, 2, 2], [1, 1, 1, 1], [4, 4, 4, 4]]}], "test_examples": [{"input": [[1, 2, 3, 4, 8], [5, 5, 5, 5, 5], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "output": [[1, 2, 3, 4, 8], [5, 5, 5, 5, 5], [1, 1, 1, 1, 1], [2, 2, 2, 2, 2], [3, 3, 3, 3, 3], [4, 4, 4, 4, 4], [8, 8, 8, 8, 8], [1, 1, 1, 1, 1], [2, 2, 2, 2, 2], [3, 3, 3, 3, 3], [4, 4, 4, 4, 4], [8, 8, 8, 8, 8]]}], "task_key": "bd4472b8", "extra_info": ""}