{"program": "def solve_aba27056(I):\n    x1 = objects(I, T, F, T)\n    x2 = mapply(toindices, x1)\n    x3 = box(x2)\n    x4 = difference(x3, x2)\n    x5 = delta(x2)\n    x6 = position(x5, x4)\n    x7 = interval(ZERO, NINE, ONE)\n    x8 = lbind(multiply, x6)\n    x9 = apply(x8, x7)\n    x10 = lbind(shift, x4)\n    x11 = mapply(x10, x9)\n    x12 = fill(I, FOUR, x5)\n    x13 = fill(x12, FOUR, x11)\n    x14 = corners(x4)\n    x15 = ofcolor(x13, ZERO)\n    x16 = rbind(toobject, x13)\n    x17 = rbind(colorcount, ZERO)\n    x18 = chain(x17, x16, dneighbors)\n    x19 = matcher(x18, TWO)\n    x20 = rbind(adjacent, x2)\n    x21 = rbind(adjacent, x11)\n    x22 = fork(both, x20, x21)\n    x23 = compose(x22, initset)\n    x24 = sfilter(x15, x19)\n    x25 = sfilter(x24, x23)\n    x26 = product(x14, x25)\n    x27 = fork(subtract, last, first)\n    x28 = fork(shoot, first, x27)\n    x29 = mapply(x28, x26)\n    O = fill(x13, FOUR, x29)\n    return O\n", "training_examples": [{"input": [[3, 3, 3, 3, 3, 3], [3, 0, 0, 0, 0, 3], [3, 0, 0, 0, 0, 3], [3, 3, 0, 0, 3, 3], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], "output": [[3, 3, 3, 3, 3, 3], [3, 4, 4, 4, 4, 3], [3, 4, 4, 4, 4, 3], [3, 3, 4, 4, 3, 3], [0, 4, 4, 4, 4, 0], [4, 0, 4, 4, 0, 4]]}, {"input": [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 6, 6, 0, 6, 6, 0], [0, 6, 0, 0, 0, 6, 0], [0, 6, 6, 6, 6, 6, 0]], "output": [[0, 0, 0, 4, 0, 0, 0], [4, 0, 0, 4, 0, 0, 4], [0, 4, 0, 4, 0, 4, 0], [0, 0, 4, 4, 4, 0, 0], [0, 6, 6, 4, 6, 6, 0], [0, 6, 4, 4, 4, 6, 0], [0, 6, 6, 6, 6, 6, 0]]}, {"input": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 7, 7, 7, 7], [0, 0, 0, 0, 7, 0, 0, 0, 7], [0, 0, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 7, 0, 0, 0, 7], [0, 0, 0, 0, 7, 7, 7, 7, 7]], "output": [[4, 0, 0, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 7, 7, 7, 7, 7], [0, 0, 0, 4, 7, 4, 4, 4, 7], [4, 4, 4, 4, 4, 4, 4, 4, 7], [4, 4, 4, 4, 4, 4, 4, 4, 7], [4, 4, 4, 4, 4, 4, 4, 4, 7], [0, 0, 0, 4, 7, 4, 4, 4, 7], [0, 0, 4, 0, 7, 7, 7, 7, 7]]}], "test_examples": [{"input": [[0, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 2, 0, 0, 2, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 2, 0, 0, 0, 0, 0], [0, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "output": [[0, 2, 2, 2, 2, 0, 4, 0, 0, 0], [0, 2, 4, 4, 2, 4, 0, 0, 0, 0], [0, 2, 4, 4, 4, 4, 4, 4, 4, 4], [0, 2, 4, 4, 4, 4, 4, 4, 4, 4], [0, 2, 4, 4, 4, 4, 4, 4, 4, 4], [0, 2, 4, 4, 4, 4, 4, 4, 4, 4], [0, 2, 4, 4, 4, 4, 4, 4, 4, 4], [0, 2, 4, 4, 2, 4, 0, 0, 0, 0], [0, 2, 2, 2, 2, 0, 4, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 0, 0]]}], "task_key": "aba27056", "extra_info": ""}