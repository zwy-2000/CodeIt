{"program": "def solve_b782dc8a(I):\n    x1 = leastcolor(I)\n    x2 = objects(I, T, F, F)\n    x3 = ofcolor(I, x1)\n    x4 = first(x3)\n    x5 = dneighbors(x4)\n    x6 = toobject(x5, I)\n    x7 = mostcolor(x6)\n    x8 = ofcolor(I, x7)\n    x9 = colorfilter(x2, ZERO)\n    x10 = rbind(adjacent, x8)\n    x11 = mfilter(x9, x10)\n    x12 = toindices(x11)\n    x13 = rbind(manhattan, x3)\n    x14 = chain(even, x13, initset)\n    x15 = sfilter(x12, x14)\n    x16 = difference(x12, x15)\n    x17 = fill(I, x1, x15)\n    O = fill(x17, x7, x16)\n    return O\n", "training_examples": [{"input": [[8, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 0, 8, 8, 8, 0], [0, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 8, 0, 0, 8, 0, 8, 0], [8, 8, 8, 0, 8, 0, 8, 8, 8, 8, 0, 8, 8, 8, 0, 8, 0, 8, 8, 8, 8, 0, 8, 0], [8, 0, 0, 0, 8, 0, 8, 0, 0, 8, 0, 0, 0, 8, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0], [8, 0, 8, 8, 8, 0, 8, 8, 0, 8, 0, 8, 8, 8, 0, 8, 8, 0, 8, 8, 8, 8, 8, 0], [8, 0, 8, 0, 0, 0, 0, 8, 0, 8, 0, 8, 0, 0, 0, 0, 8, 0, 8, 0, 0, 0, 0, 0], [8, 0, 8, 8, 8, 8, 8, 8, 0, 8, 0, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 0], [8, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 0, 8, 0], [8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 0, 8, 0], [0, 8, 0, 8, 0, 8, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 8, 0, 8, 0, 8, 0, 8, 0], [0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0]], "output": [[8, 3, 2, 3, 2, 3, 8, 8, 8, 8, 8, 8, 0, 8, 8, 8, 2, 8, 8, 0, 8, 8, 8, 0], [3, 2, 8, 8, 8, 2, 3, 2, 3, 2, 3, 8, 0, 0, 0, 8, 3, 8, 0, 0, 8, 2, 8, 0], [8, 8, 8, 0, 8, 3, 8, 8, 8, 8, 2, 8, 8, 8, 0, 8, 2, 8, 8, 8, 8, 3, 8, 0], [8, 0, 0, 0, 8, 2, 8, 0, 0, 8, 3, 2, 3, 8, 0, 8, 3, 2, 3, 2, 3, 2, 8, 0], [8, 0, 8, 8, 8, 3, 8, 8, 0, 8, 2, 8, 8, 8, 0, 8, 8, 3, 8, 8, 8, 8, 8, 0], [8, 0, 8, 2, 3, 2, 3, 8, 0, 8, 3, 8, 0, 0, 0, 0, 8, 2, 8, 0, 0, 0, 0, 0], [8, 0, 8, 8, 8, 8, 8, 8, 0, 8, 2, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 0], [8, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 8, 0], [8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 2, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 3, 8, 0], [0, 8, 0, 8, 0, 8, 0, 8, 3, 2, 3, 8, 0, 0, 0, 0, 8, 2, 8, 0, 8, 2, 8, 0], [0, 8, 8, 8, 0, 8, 8, 8, 2, 8, 8, 8, 0, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0]]}, {"input": [[0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 8], [8, 8, 0, 8, 8, 8, 0, 8, 0, 8, 8, 8, 0, 8], [0, 8, 0, 0, 0, 8, 0, 8, 0, 8, 0, 8, 8, 8], [0, 8, 8, 8, 8, 8, 0, 8, 0, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 8, 8, 8, 0, 8], [8, 8, 8, 8, 8, 8, 0, 8, 0, 0, 0, 8, 0, 8], [8, 0, 0, 0, 0, 8, 0, 8, 8, 8, 0, 8, 0, 8], [8, 8, 8, 8, 0, 8, 0, 0, 0, 8, 0, 8, 0, 0], [0, 0, 0, 8, 1, 8, 8, 8, 8, 8, 0, 8, 8, 0], [8, 8, 0, 8, 4, 1, 0, 0, 0, 0, 0, 0, 8, 0], [0, 8, 0, 8, 1, 8, 8, 8, 8, 8, 8, 8, 8, 0], [0, 8, 8, 8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 0, 8, 8, 8, 8, 8, 8, 8]], "output": [[0, 0, 0, 8, 0, 0, 0, 8, 1, 4, 1, 4, 1, 8], [8, 8, 0, 8, 8, 8, 0, 8, 4, 8, 8, 8, 4, 8], [0, 8, 0, 0, 0, 8, 0, 8, 1, 8, 0, 8, 8, 8], [0, 8, 8, 8, 8, 8, 0, 8, 4, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 1, 8, 8, 8, 0, 8], [8, 8, 8, 8, 8, 8, 0, 8, 4, 1, 4, 8, 0, 8], [8, 4, 1, 4, 1, 8, 0, 8, 8, 8, 1, 8, 0, 8], [8, 8, 8, 8, 4, 8, 0, 0, 0, 8, 4, 8, 0, 0], [0, 0, 0, 8, 1, 8, 8, 8, 8, 8, 1, 8, 8, 0], [8, 8, 0, 8, 4, 1, 4, 1, 4, 1, 4, 1, 8, 0], [1, 8, 0, 8, 1, 8, 8, 8, 8, 8, 8, 8, 8, 0], [4, 8, 8, 8, 4, 8, 0, 0, 0, 0, 0, 0, 0, 0], [1, 4, 1, 4, 1, 8, 0, 8, 8, 8, 8, 8, 8, 8]]}], "test_examples": [{"input": [[8, 8, 0, 8, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 0, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8], [0, 8, 0, 0, 0, 0, 4, 3, 8, 0, 0, 0, 0, 0, 8], [0, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 0, 8, 8, 8], [0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 8, 0, 0], [8, 8, 8, 8, 8, 0, 8, 8, 8, 0, 8, 0, 8, 0, 8], [0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 8, 0, 8, 0, 8], [8, 8, 8, 0, 8, 8, 8, 0, 8, 0, 8, 0, 8, 8, 8], [0, 0, 8, 0, 0, 0, 8, 0, 8, 0, 8, 0, 0, 0, 0], [8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8], [8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8], [8, 8, 8, 0, 8, 0, 8, 8, 8, 8, 8, 8, 8, 0, 8], [0, 0, 8, 0, 8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8], [8, 0, 8, 8, 8, 0, 8, 0, 8, 8, 8, 8, 8, 8, 8], [8, 0, 0, 0, 0, 0, 8, 0, 8, 0, 0, 0, 0, 0, 0]], "output": [[8, 8, 4, 8, 0, 0, 8, 3, 4, 3, 4, 3, 4, 3, 4], [0, 8, 3, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8], [0, 8, 4, 3, 4, 3, 4, 3, 8, 0, 0, 0, 0, 0, 8], [0, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 0, 8, 8, 8], [0, 0, 0, 0, 0, 0, 8, 3, 4, 3, 8, 0, 8, 0, 0], [8, 8, 8, 8, 8, 0, 8, 8, 8, 4, 8, 0, 8, 0, 8], [4, 3, 4, 3, 8, 0, 0, 0, 8, 3, 8, 0, 8, 0, 8], [8, 8, 8, 4, 8, 8, 8, 0, 8, 4, 8, 0, 8, 8, 8], [0, 0, 8, 3, 4, 3, 8, 0, 8, 3, 8, 0, 0, 0, 0], [8, 0, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8, 8, 0, 8], [8, 0, 0, 0, 8, 3, 4, 3, 4, 3, 4, 3, 8, 0, 8], [8, 8, 8, 0, 8, 4, 8, 8, 8, 8, 8, 8, 8, 0, 8], [4, 3, 8, 0, 8, 3, 8, 0, 0, 0, 0, 0, 0, 0, 8], [8, 4, 8, 8, 8, 4, 8, 0, 8, 8, 8, 8, 8, 8, 8], [8, 3, 4, 3, 4, 3, 8, 0, 8, 0, 0, 0, 0, 0, 0]]}], "task_key": "b782dc8a", "extra_info": ""}