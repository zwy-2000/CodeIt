{"program": "def solve_10fcaaa3(I):\n    x1 = leastcolor(I)\n    x2 = hconcat(I, I)\n    x3 = vconcat(x2, x2)\n    x4 = ofcolor(x3, x1)\n    x5 = mapply(ineighbors, x4)\n    O = underfill(x3, EIGHT, x5)\n    return O\n", "training_examples": [{"input": [[0, 0, 0, 0], [0, 5, 0, 0]], "output": [[8, 0, 8, 0, 8, 0, 8, 0], [0, 5, 0, 0, 0, 5, 0, 0], [8, 0, 8, 0, 8, 0, 8, 0], [0, 5, 0, 0, 0, 5, 0, 0]]}, {"input": [[0, 0, 6, 0], [0, 0, 0, 0], [0, 6, 0, 0]], "output": [[0, 0, 6, 0, 0, 0, 6, 0], [8, 8, 8, 8, 8, 8, 8, 8], [0, 6, 0, 8, 0, 6, 0, 8], [8, 0, 6, 0, 8, 0, 6, 0], [8, 8, 8, 8, 8, 8, 8, 8], [0, 6, 0, 0, 0, 6, 0, 0]]}, {"input": [[0, 0, 0, 0], [0, 2, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], "output": [[8, 0, 8, 0, 8, 0, 8, 0], [0, 2, 0, 0, 0, 2, 0, 0], [8, 0, 8, 0, 8, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0], [8, 0, 8, 0, 8, 0, 8, 0], [0, 2, 0, 0, 0, 2, 0, 0], [8, 0, 8, 0, 8, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0]]}, {"input": [[0, 0, 0], [0, 4, 0], [0, 0, 0], [0, 0, 0], [4, 0, 0]], "output": [[8, 0, 8, 8, 0, 8], [0, 4, 0, 0, 4, 0], [8, 0, 8, 8, 0, 8], [0, 8, 8, 0, 8, 0], [4, 0, 0, 4, 0, 0], [8, 8, 8, 8, 8, 8], [0, 4, 0, 0, 4, 0], [8, 0, 8, 8, 0, 8], [0, 8, 8, 0, 8, 0], [4, 0, 0, 4, 0, 0]]}], "test_examples": [{"input": [[0, 3, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 3, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0]], "output": [[0, 3, 0, 0, 0, 0, 3, 0, 0, 0], [8, 0, 8, 0, 0, 8, 0, 8, 0, 0], [0, 0, 8, 0, 8, 0, 0, 8, 0, 8], [0, 0, 0, 3, 0, 0, 0, 0, 3, 0], [8, 0, 8, 0, 8, 8, 0, 8, 0, 8], [8, 3, 8, 0, 0, 8, 3, 8, 0, 0], [8, 3, 8, 0, 0, 8, 3, 8, 0, 0], [8, 0, 8, 0, 0, 8, 0, 8, 0, 0], [0, 0, 8, 0, 8, 0, 0, 8, 0, 8], [0, 0, 0, 3, 0, 0, 0, 0, 3, 0], [8, 0, 8, 0, 8, 8, 0, 8, 0, 8], [0, 3, 0, 0, 0, 0, 3, 0, 0, 0]]}], "task_key": "10fcaaa3", "extra_info": ""}