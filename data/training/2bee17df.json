{"program": "def solve_2bee17df(I):\n    x1 = height(I)\n    x2 = rot90(I)\n    x3 = subtract(x1, TWO)\n    x4 = interval(ZERO, x1, ONE)\n    x5 = rbind(colorcount, ZERO)\n    x6 = matcher(x5, x3)\n    x7 = rbind(vsplit, x1)\n    x8 = lbind(apply, x6)\n    x9 = compose(x8, x7)\n    x10 = x9(I)\n    x11 = pair(x4, x10)\n    x12 = sfilter(x11, last)\n    x13 = mapply(hfrontier, x12)\n    x14 = x9(x2)\n    x15 = pair(x14, x4)\n    x16 = sfilter(x15, first)\n    x17 = mapply(vfrontier, x16)\n    x18 = astuple(x13, x17)\n    x19 = merge(x18)\n    O = underfill(I, THREE, x19)\n    return O\n", "training_examples": [{"input": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 2], [8, 8, 8, 0, 8, 8, 0, 8, 0, 2], [8, 8, 0, 0, 8, 0, 0, 0, 0, 2], [8, 8, 0, 0, 0, 0, 0, 0, 2, 2], [8, 0, 0, 0, 0, 0, 0, 0, 2, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 2, 2, 0, 2], [8, 2, 0, 0, 0, 2, 2, 2, 2, 2], [8, 2, 2, 2, 2, 2, 2, 2, 2, 2]], "output": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 2], [8, 8, 8, 3, 8, 8, 0, 8, 0, 2], [8, 8, 0, 3, 8, 0, 0, 0, 0, 2], [8, 8, 0, 3, 0, 0, 0, 0, 2, 2], [8, 0, 0, 3, 0, 0, 0, 0, 2, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 0, 0, 3, 0, 0, 2, 2, 0, 2], [8, 2, 0, 3, 0, 2, 2, 2, 2, 2], [8, 2, 2, 2, 2, 2, 2, 2, 2, 2]]}, {"input": [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [8, 0, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2], [8, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [8, 8, 0, 0, 0, 0, 8, 8, 0, 0, 0, 8], [8, 8, 8, 0, 0, 8, 8, 8, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]], "output": [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [8, 0, 0, 3, 2, 2, 0, 2, 2, 2, 2, 2], [8, 0, 0, 3, 0, 2, 0, 0, 2, 2, 0, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8], [8, 8, 0, 3, 0, 0, 8, 8, 0, 0, 0, 8], [8, 8, 8, 3, 0, 8, 8, 8, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]]}, {"input": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [2, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8], [2, 2, 0, 0, 0, 0, 0, 8, 8, 0, 0, 8], [2, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 8], [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], [2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], "output": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [2, 0, 0, 0, 3, 3, 8, 8, 8, 8, 8, 8], [2, 2, 0, 0, 3, 3, 0, 8, 8, 0, 0, 8], [2, 0, 0, 0, 3, 3, 0, 8, 0, 0, 0, 8], [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8], [2, 2, 2, 0, 3, 3, 0, 0, 0, 0, 0, 8], [2, 2, 0, 0, 3, 3, 0, 0, 0, 0, 0, 8], [2, 2, 0, 0, 3, 3, 0, 0, 0, 0, 0, 8], [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8], [2, 0, 0, 0, 3, 3, 0, 0, 0, 0, 2, 2], [2, 2, 0, 2, 3, 3, 2, 0, 0, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]}], "test_examples": [{"input": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 0, 0, 8, 8, 8, 0, 0, 8, 2, 2], [8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], [8, 8, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 2, 2], [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], "output": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 3, 0, 8, 8, 8, 3, 3, 8, 2, 2], [8, 8, 8, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 8, 0, 3, 0, 0, 0, 0, 3, 3, 0, 2, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 2, 2, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 2, 2], [8, 8, 0, 2, 3, 2, 2, 0, 0, 3, 3, 2, 2, 2], [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]}], "task_key": "2bee17df", "extra_info": ""}