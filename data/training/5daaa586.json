{"program": "def solve_5daaa586(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, ZERO)\n    x3 = rbind(bordering, I)\n    x4 = compose(flip, x3)\n    x5 = extract(x2, x4)\n    x6 = outbox(x5)\n    x7 = subgrid(x6, I)\n    x8 = fgpartition(x7)\n    x9 = argmax(x8, size)\n    x10 = color(x9)\n    x11 = toindices(x9)\n    x12 = prapply(connect, x11, x11)\n    x13 = mfilter(x12, vline)\n    x14 = mfilter(x12, hline)\n    x15 = size(x13)\n    x16 = size(x14)\n    x17 = greater(x15, x16)\n    x18 = branch(x17, x13, x14)\n    O = fill(x7, x10, x18)\n    return O\n", "training_examples": [{"input": [[0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [8, 8, 4, 8, 8, 8, 8, 8, 8, 1, 8, 8], [0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 4, 0, 0, 0, 8, 0, 0, 1, 0, 8], [0, 0, 4, 8, 0, 0, 8, 0, 0, 1, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 4, 0, 0, 0, 0, 8, 0, 1, 0, 8], [6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 6, 6], [0, 0, 4, 0, 0, 0, 8, 0, 0, 1, 0, 0], [0, 8, 4, 0, 0, 0, 0, 8, 0, 1, 0, 0]], "output": [[4, 8, 8, 8, 8, 8, 8, 1], [4, 8, 0, 0, 8, 8, 0, 1], [4, 8, 0, 0, 8, 8, 0, 1], [4, 8, 0, 0, 8, 8, 0, 1], [4, 8, 0, 0, 8, 8, 0, 1], [4, 0, 0, 0, 0, 8, 0, 1], [4, 0, 0, 0, 0, 8, 0, 1], [6, 6, 6, 6, 6, 6, 6, 1]]}, {"input": [[0, 0, 4, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 3, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 3, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4], [2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2], [4, 0, 0, 3, 4, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], [4, 0, 0, 3, 0, 0, 0, 0, 4, 0, 4, 4, 0, 0, 0], [4, 0, 0, 3, 0, 0, 4, 0, 0, 0, 4, 4, 0, 0, 0], [8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4], [0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0], [0, 0, 4, 3, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0]], "output": [[3, 2, 2, 2, 2, 2, 2, 2, 4], [3, 4, 4, 4, 4, 4, 4, 4, 4], [3, 0, 0, 0, 0, 0, 0, 0, 4], [3, 0, 0, 0, 0, 4, 4, 4, 4], [3, 0, 0, 4, 4, 4, 4, 4, 4], [3, 8, 8, 8, 8, 8, 8, 8, 4]]}, {"input": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 2, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 8, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0]], "output": [[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8], [3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 8], [3, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 0, 2, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 0, 2, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 2, 2, 0, 2, 0, 0, 0, 0, 2, 2, 8], [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8]]}], "test_examples": [{"input": [[0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0], [3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0]], "output": [[1, 3, 3, 3, 3, 3, 3, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0, 0, 2], [1, 1, 1, 1, 1, 1, 1, 1, 0, 2], [1, 0, 0, 0, 0, 0, 0, 0, 0, 2], [1, 1, 1, 1, 1, 1, 0, 0, 0, 2], [1, 1, 1, 1, 1, 1, 1, 1, 0, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 2], [1, 1, 0, 0, 0, 0, 0, 0, 0, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]]}], "task_key": "5daaa586", "extra_info": ""}