{"program": "def solve_b2862040(I):\n    x1 = objects(I, T, F, F)\n    x2 = colorfilter(x1, NINE)\n    x3 = colorfilter(x1, ONE)\n    x4 = rbind(bordering, I)\n    x5 = compose(flip, x4)\n    x6 = mfilter(x2, x5)\n    x7 = rbind(adjacent, x6)\n    x8 = mfilter(x3, x7)\n    O = fill(I, EIGHT, x8)\n    return O\n", "training_examples": [{"input": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 1, 1, 1, 9, 9, 9, 1, 9, 9, 9], [9, 1, 9, 1, 9, 9, 9, 1, 9, 9, 9], [9, 1, 9, 1, 9, 9, 1, 1, 1, 1, 9], [9, 1, 1, 1, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]], "output": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 8, 8, 8, 9, 9, 9, 1, 9, 9, 9], [9, 8, 9, 8, 9, 9, 9, 1, 9, 9, 9], [9, 8, 9, 8, 9, 9, 1, 1, 1, 1, 9], [9, 8, 8, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]]}, {"input": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 1, 1, 1, 1, 1, 9, 9, 1, 9, 9], [9, 1, 9, 9, 9, 1, 9, 9, 1, 9, 1], [9, 1, 1, 1, 1, 1, 9, 9, 1, 1, 1], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9], [9, 9, 1, 1, 1, 1, 1, 9, 9, 9, 9], [9, 9, 9, 1, 9, 1, 9, 9, 9, 9, 9], [9, 9, 9, 1, 1, 1, 9, 9, 1, 1, 1], [9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 1], [1, 1, 9, 9, 9, 9, 9, 9, 1, 1, 1]], "output": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 8, 8, 8, 8, 8, 9, 9, 1, 9, 9], [9, 8, 9, 9, 9, 8, 9, 9, 1, 9, 1], [9, 8, 8, 8, 8, 8, 9, 9, 1, 1, 1], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9], [9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9], [9, 9, 9, 8, 9, 8, 9, 9, 9, 9, 9], [9, 9, 9, 8, 8, 8, 9, 9, 8, 8, 8], [9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 8], [1, 1, 9, 9, 9, 9, 9, 9, 8, 8, 8]]}, {"input": [[9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 9], [9, 9, 1, 9, 9, 9, 9, 1, 1, 1, 1, 9, 9], [9, 1, 1, 1, 1, 9, 9, 9, 1, 9, 9, 9, 9], [9, 1, 9, 9, 1, 9, 9, 9, 1, 9, 9, 9, 9], [9, 1, 1, 1, 1, 9, 9, 9, 1, 1, 1, 9, 9], [9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9], [9, 1, 9, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9], [1, 1, 1, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 1, 9, 9, 9, 9, 1, 9, 1, 1, 9, 9, 9], [1, 1, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9]], "output": [[9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 9], [9, 9, 8, 9, 9, 9, 9, 1, 1, 1, 1, 9, 9], [9, 8, 8, 8, 8, 9, 9, 9, 1, 9, 9, 9, 9], [9, 8, 9, 9, 8, 9, 9, 9, 1, 9, 9, 9, 9], [9, 8, 8, 8, 8, 9, 9, 9, 1, 1, 1, 9, 9], [9, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9], [9, 1, 9, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9], [1, 1, 1, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 1, 9, 9, 9, 9, 1, 9, 1, 1, 9, 9, 9], [1, 1, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9]]}, {"input": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 1, 1, 1, 1, 1, 1, 9, 9, 9, 9, 1, 1, 1, 1], [9, 9, 1, 9, 9, 9, 1, 9, 9, 9, 9, 1, 9, 9, 1], [9, 9, 1, 1, 1, 9, 1, 9, 9, 9, 1, 1, 1, 9, 1], [9, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9, 9, 9, 9, 1], [9, 9, 9, 9, 1, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 1, 1, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9], [1, 1, 1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [1, 9, 9, 1, 9, 9, 9, 1, 9, 1, 9, 9, 9, 9, 9], [1, 1, 1, 1, 9, 9, 9, 1, 1, 1, 1, 1, 9, 9, 9], [1, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 1, 1, 9, 9, 9, 9, 9, 9, 1, 1, 9]], "output": [[9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 1, 1, 1, 1], [9, 9, 8, 9, 9, 9, 8, 9, 9, 9, 9, 1, 9, 9, 1], [9, 9, 8, 8, 8, 9, 8, 9, 9, 9, 1, 1, 1, 9, 1], [9, 9, 9, 9, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 1], [9, 9, 9, 9, 8, 9, 9, 9, 8, 8, 8, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 8, 8, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 9, 9, 9, 9], [8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 9, 9, 8, 9, 9, 9, 1, 9, 1, 9, 9, 9, 9, 9], [8, 8, 8, 8, 9, 9, 9, 1, 1, 1, 1, 1, 9, 9, 9], [8, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 1, 1, 9, 9, 9, 9, 9, 9, 1, 1, 9]]}], "test_examples": [{"input": [[1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 1, 1, 1, 1, 1, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 1, 9, 9, 1, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 1, 9, 9, 1, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 1, 1, 1, 1, 9, 9, 9, 1, 9, 9, 1], [9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 1, 1, 1, 1], [1, 1, 1, 1, 9, 9, 9, 1, 9, 9, 9, 1, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1], [1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 1, 1, 1, 1, 1, 1, 9, 9, 9, 1, 1, 9], [9, 9, 9, 1, 9, 9, 9, 9, 1, 9, 9, 9, 9, 1, 9], [9, 9, 9, 1, 9, 9, 9, 9, 1, 9, 9, 9, 9, 1, 9], [9, 9, 9, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 1, 9]], "output": [[1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 9, 9, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 9, 9, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 8, 8, 8, 9, 9, 9, 1, 9, 9, 1], [9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 1, 1, 1, 1], [1, 1, 1, 1, 9, 9, 9, 8, 9, 9, 9, 1, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1], [1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 8, 8, 8, 8, 8, 8, 9, 9, 9, 1, 1, 9], [9, 9, 9, 8, 9, 9, 9, 9, 8, 9, 9, 9, 9, 1, 9], [9, 9, 9, 8, 9, 9, 9, 9, 8, 9, 9, 9, 9, 1, 9], [9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 1, 9]]}], "task_key": "b2862040", "extra_info": ""}