{"program": "def solve_bc1d5164(I):\n    x1 = leastcolor(I)\n    x2 = crop(I, ORIGIN, THREE_BY_THREE)\n    x3 = crop(I, TWO_BY_ZERO, THREE_BY_THREE)\n    x4 = tojvec(FOUR)\n    x5 = crop(I, x4, THREE_BY_THREE)\n    x6 = astuple(TWO, FOUR)\n    x7 = crop(I, x6, THREE_BY_THREE)\n    x8 = canvas(ZERO, THREE_BY_THREE)\n    x9 = rbind(ofcolor, x1)\n    x10 = astuple(x2, x3)\n    x11 = astuple(x5, x7)\n    x12 = combine(x10, x11)\n    x13 = mapply(x9, x12)\n    O = fill(x8, x1, x13)\n    return O\n", "training_examples": [{"input": [[0, 8, 0, 0, 0, 8, 0], [8, 8, 0, 0, 0, 8, 8], [0, 0, 0, 0, 0, 0, 0], [8, 8, 0, 0, 0, 8, 8], [0, 8, 0, 0, 0, 8, 0]], "output": [[0, 8, 0], [8, 8, 8], [0, 8, 0]]}, {"input": [[2, 2, 0, 0, 0, 2, 2], [0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 2, 0], [2, 0, 0, 0, 0, 0, 2]], "output": [[2, 2, 2], [0, 2, 2], [2, 0, 2]]}, {"input": [[4, 4, 0, 0, 0, 4, 0], [0, 0, 0, 0, 0, 4, 4], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 4]], "output": [[4, 4, 0], [0, 4, 4], [4, 0, 4]]}, {"input": [[4, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 4, 4]], "output": [[4, 0, 4], [0, 0, 0], [4, 4, 4]]}, {"input": [[0, 3, 0, 0, 0, 3, 0], [3, 0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3]], "output": [[0, 3, 0], [3, 0, 3], [0, 0, 3]]}], "test_examples": [{"input": [[0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1]], "output": [[0, 1, 1], [1, 0, 0], [0, 1, 1]]}], "task_key": "bc1d5164", "extra_info": ""}