{"program": "def solve_6e02f1e3(I):\n    x1 = numcolors(I)\n    x2 = canvas(ZERO, THREE_BY_THREE)\n    x3 = equality(x1, THREE)\n    x4 = equality(x1, TWO)\n    x5 = branch(x3, TWO_BY_ZERO, ORIGIN)\n    x6 = branch(x4, TWO_BY_TWO, ZERO_BY_TWO)\n    x7 = connect(x5, x6)\n    O = fill(x2, FIVE, x7)\n    return O\n", "training_examples": [{"input": [[2, 2, 2], [3, 2, 3], [3, 3, 3]], "output": [[5, 0, 0], [0, 5, 0], [0, 0, 5]]}, {"input": [[3, 3, 3], [4, 2, 2], [4, 4, 2]], "output": [[0, 0, 5], [0, 5, 0], [5, 0, 0]]}, {"input": [[4, 4, 4], [4, 4, 4], [4, 4, 4]], "output": [[5, 5, 5], [0, 0, 0], [0, 0, 0]]}, {"input": [[3, 3, 3], [3, 3, 3], [3, 3, 3]], "output": [[5, 5, 5], [0, 0, 0], [0, 0, 0]]}, {"input": [[4, 4, 4], [4, 4, 4], [3, 3, 3]], "output": [[5, 0, 0], [0, 5, 0], [0, 0, 5]]}], "test_examples": [{"input": [[4, 4, 4], [2, 3, 2], [3, 2, 3]], "output": [[0, 0, 5], [0, 5, 0], [5, 0, 0]]}], "task_key": "6e02f1e3", "extra_info": ""}