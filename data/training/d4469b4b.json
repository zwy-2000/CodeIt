{"program": "def solve_d4469b4b(I):\n    x1 = palette(I)\n    x2 = other(x1, ZERO)\n    x3 = equality(x2, ONE)\n    x4 = equality(x2, TWO)\n    x5 = branch(x3, UNITY, TWO_BY_TWO)\n    x6 = branch(x4, RIGHT, x5)\n    x7 = fork(combine, vfrontier, hfrontier)\n    x8 = x7(x6)\n    x9 = canvas(ZERO, THREE_BY_THREE)\n    O = fill(x9, FIVE, x8)\n    return O\n", "training_examples": [{"input": [[2, 0, 0, 0, 0], [0, 2, 0, 0, 2], [2, 0, 0, 2, 0], [0, 0, 0, 2, 2], [0, 0, 2, 2, 0]], "output": [[5, 5, 5], [0, 5, 0], [0, 5, 0]]}, {"input": [[0, 0, 0, 0, 0], [0, 0, 1, 1, 1], [0, 1, 0, 1, 1], [0, 1, 0, 1, 0], [0, 0, 0, 0, 1]], "output": [[0, 5, 0], [5, 5, 5], [0, 5, 0]]}, {"input": [[3, 0, 0, 0, 0], [0, 0, 0, 3, 3], [0, 3, 3, 0, 0], [0, 3, 0, 3, 0], [3, 0, 3, 3, 0]], "output": [[0, 0, 5], [0, 0, 5], [5, 5, 5]]}, {"input": [[1, 0, 1, 0, 0], [1, 0, 0, 1, 1], [1, 1, 0, 1, 0], [0, 1, 0, 1, 0], [1, 0, 0, 0, 1]], "output": [[0, 5, 0], [5, 5, 5], [0, 5, 0]]}, {"input": [[2, 0, 2, 0, 2], [2, 0, 0, 0, 2], [2, 2, 0, 0, 0], [2, 0, 0, 2, 2], [2, 2, 2, 0, 2]], "output": [[5, 5, 5], [0, 5, 0], [0, 5, 0]]}, {"input": [[0, 2, 0, 2, 0], [0, 2, 2, 2, 0], [0, 2, 2, 0, 2], [2, 2, 2, 0, 0], [0, 0, 2, 0, 2]], "output": [[5, 5, 5], [0, 5, 0], [0, 5, 0]]}, {"input": [[0, 3, 0, 3, 0], [3, 3, 0, 0, 0], [0, 3, 0, 0, 0], [0, 0, 3, 0, 0], [3, 3, 3, 0, 0]], "output": [[0, 0, 5], [0, 0, 5], [5, 5, 5]]}], "test_examples": [{"input": [[1, 1, 1, 1, 0], [0, 0, 1, 0, 1], [0, 1, 0, 0, 0], [0, 1, 0, 0, 1], [0, 0, 1, 0, 0]], "output": [[0, 5, 0], [5, 5, 5], [0, 5, 0]]}, {"input": [[0, 3, 0, 3, 3], [0, 0, 3, 0, 0], [3, 0, 0, 0, 0], [0, 0, 3, 0, 3], [0, 0, 0, 0, 3]], "output": [[0, 0, 5], [0, 0, 5], [5, 5, 5]]}], "task_key": "d4469b4b", "extra_info": ""}