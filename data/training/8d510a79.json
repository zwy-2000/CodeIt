{"program": "def solve_8d510a79(I):\n    x1 = height(I)\n    x2 = halve(x1)\n    x3 = ofcolor(I, ONE)\n    x4 = ofcolor(I, TWO)\n    x5 = ofcolor(I, FIVE)\n    x6 = rbind(gravitate, x5)\n    x7 = compose(x6, initset)\n    x8 = fork(add, identity, x7)\n    x9 = fork(connect, identity, x8)\n    x10 = mapply(x9, x4)\n    x11 = fill(I, TWO, x10)\n    x12 = rbind(greater, x2)\n    x13 = compose(x12, first)\n    x14 = sfilter(x3, x13)\n    x15 = difference(x3, x14)\n    x16 = rbind(shoot, UP)\n    x17 = rbind(shoot, DOWN)\n    x18 = mapply(x16, x15)\n    x19 = mapply(x17, x14)\n    x20 = combine(x18, x19)\n    O = fill(x11, ONE, x20)\n    return O\n", "training_examples": [{"input": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 2, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "output": [[0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 2], [0, 2, 0, 0, 0, 0, 0, 0, 0, 2], [0, 2, 0, 0, 0, 0, 0, 0, 0, 2], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 1, 0, 0, 0, 2, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0]]}, {"input": [[0, 2, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 2, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "output": [[0, 2, 0, 1, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 0, 2, 0, 1, 0, 0], [0, 2, 0, 0, 0, 2, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 2, 0, 0, 0, 0, 2, 0, 0, 2], [0, 2, 0, 0, 0, 0, 2, 0, 0, 2], [0, 0, 0, 0, 1, 0, 2, 0, 0, 0], [0, 0, 0, 0, 1, 0, 2, 0, 0, 0], [0, 0, 1, 0, 1, 0, 2, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0]]}], "test_examples": [{"input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 1, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]], "output": [[0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 2, 0, 1, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 0, 0, 2, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0]]}], "task_key": "8d510a79", "extra_info": ""}